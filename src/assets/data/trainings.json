[
  {
    "id": "react",
    "title": "React",
    "picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png",
    "description": "React est une bibliothèque JavaScript pour la construction d’interfaces utilisateur (UI)",
    "hashtag": [
      "react",
      "front",
      "javascript"
    ],
    "objectives": [
      "Comprendre les fondamentaux de React",
      "Création d'une application front-end en react",
      "Comprendre Redux",
      "Utilisation des hooks",
      "Bonnes pratiques & tips"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes",
      "Intégrateurs"
    ],
    "prerequisite": [
      "Avoir des notions dans la programmation JavaScript",
      "Connaissances du langage HTML et CSS"
    ],
    "duration": "2 jour (14 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Les fondamentaux",
        "content": [
          {
            "title": "Qu'est-ce que React"
          },
          {
            "title": "Initialisation d'une application"
          }
        ]
      },
      {
        "title": "II . Les composants",
        "content": [
          {
            "title": "Qu'est-ce qu'un composant"
          },
          {
            "title": "cycle de vie d'un composant"
          },
          {
            "title": "La composition"
          },
          {
            "title": "Communication entre composants"
          },
          {
            "title": "La navigation entre les composants"
          },
          {
            "title": "Bonne pratique de création d'un composant"
          }
        ]
      },
      {
        "title": "III . Les formulaires",
        "content": [
          {
            "title": "Utilisation de formulaires"
          },
          {
            "title": "Exemple avec une librairy (Formik)"
          }
        ]
      },
      {
        "title": "IV . Redux",
        "content": [
          {
            "title": "Qu'est-ce que Redux"
          },
          {
            "title": "Side effect"
          }
        ]
      },
      {
        "title": "V . Les hooks",
        "content": [
          {
            "title": "Qu'est-ce qu'un Hook"
          },
          {
            "title": "Class component VS function component"
          },
          {
            "title": "Context"
          }
        ]
      },
      {
        "title": "VI . Les tests",
        "content": [
          {
            "title": "Tests unitaires"
          },
          {
            "title": "Cypress"
          }
        ]
      }
    ]
  },
  {
    "id": "kubernetes",
    "title": "Kubernetes",
    "picture": "https://upload.wikimedia.org/wikipedia/commons/6/67/Kubernetes_logo.svg",
    "description": "Kubernetes est devenu un outil incontournable du déploiement. Il est la base de l'architecture cloud où les services se dimensionnent en fonction du besoin et se relancent automatiquement suite à un crash. Apprenez à maîtriser et configurer cet orchestrateur de container au travers d'une formation qui favorise la pratique à la théorie.",
    "hashtag": [
      "Docker",
      "Kubernetes",
      "devops"
    ],
    "objectives": [
      "Découvrir Kubernetes",
      "Déployer des applications sur un cluster",
      "Administrer la plateforme de Kubernetes",
      "Surveiller l'infrastructure déployée"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes",
      "Intégrateurs",
      "Ops"
    ],
    "prerequisite": [
      "Être à l'aise avec les langages de développement",
      "Comprendre le fonctionnement des containeurs avec Docker",
      "Avoir des notions de base sur le cloud"
    ],
    "duration": "3 jour (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction à Kubernetes",
        "content": [
          {
            "title": "Quelques rappels sur Docker et son éco-systeme"
          },
          {
            "title": "Le vocabulaire de Kubernetes"
          },
          {
            "title": "Architecture et installation des outils"
          },
          {
            "title": "Notion sur le cloud et les premières commandes Kube"
          }
        ]
      },
      {
        "title": "II . Découvrir  & explorer un cluster",
        "content": [
          {
            "title": "Inspection d'un cluster via les lignes de commande"
          },
          {
            "title": "Explorer les différentes configuration existantes"
          },
          {
            "title": "Comprendre le fonctionnement du scaling et des namespaces"
          }
        ]
      },
      {
        "title": "III . Deployer une application",
        "content": [
          {
            "title": "Ecrire un premier déploiement"
          },
          {
            "title": "Mettre en place un service"
          },
          {
            "title": "Mise en pratique de la théorie avec un projet fil rouge"
          }
        ]
      },
      {
        "title": "IV . Mise en réseau des services",
        "content": [
          {
            "title": "Notion sur la communication entre les différents pods"
          },
          {
            "title": "Création d'une ingress"
          }
        ]
      },
      {
        "title": "V . Administration de la platforme",
        "content": [
          {
            "title": "Gestion des autorisations avec les RBAC"
          },
          {
            "title": "Gestion des secrets"
          },
          {
            "title": "Comment débugger un pod"
          },
          {
            "title": "Exploration des metrics d'un cluster"
          }
        ]
      },
      {
        "title": "VI . Helm",
        "content": [
          {
            "title": "Découverte des helm chart"
          },
          {
            "title": "Mise en place d'un deploiement via Helm"
          },
          {
            "title": "Automatisation des déploiement"
          }
        ]
      }
    ]
  },
  {
    "id": "docker",
    "title": "Docker",
    "picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Docker_%28container_engine%29_logo.svg/1280px-Docker_%28container_engine%29_logo.svg.png",
    "description": "Docker est l'outil de la contenairisation applicative par excellence. Apparu en 2013, docker a révolutionné le déploiement d'applications en permettant une meilleure interopérabilité entre les serveurs. Cette formation est faite pour vous, si vous souhaitez apprendre à maîtriser cet outil. A l'issue de cette formation, vous pourrez utiliser des images, en créer, les faire communiquer ensemble tout en comprenant comment.",
    "hashtag": [
      "docker",
      "devops"
    ],
    "objectives": [
      "Découvrir  Docker et ses principes",
      "Utiliser, créer et déployer des images Docker",
      "Faire communiquer des services ensemble",
      "Exploiter tout le potentiel de Docker dans le monde du développement"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes",
      "Intégrateurs",
      "Ops"
    ],
    "prerequisite": [
      "Être à l'aise avec les langages de developpement",
      "Avoir des notions de base sur Git"
    ],
    "duration": "1 jour (7 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction à Docker",
        "content": [
          {
            "title": "Les principes de bases de Docker"
          },
          {
            "title": "Installation de Docker"
          },
          {
            "title": "Découverte de l'eco-système Docker/Dockerhub"
          }
        ]
      },
      {
        "title": "II . Images et conteneurs",
        "content": [
          {
            "title": "Principe de base des conteneurs"
          },
          {
            "title": "Isolation des conteneurs"
          },
          {
            "title": "Utilisation des images du repository"
          }
        ]
      },
      {
        "title": "III . Création de nos propres images Docker",
        "content": [
          {
            "title": "Dockerfile et build"
          },
          {
            "title": "Mise en pratique"
          },
          {
            "title": "Partager ses images sur un repository"
          }
        ]
      },
      {
        "title": "IV . Volumes & réseau",
        "content": [
          {
            "title": "Éphémérité de l'espace disque des conteneurs"
          },
          {
            "title": "La résilience d'un conteneur: les volumes"
          },
          {
            "title": "Exposition des ports des conteneurs"
          },
          {
            "title": "Mise en place d'un réseau"
          }
        ]
      },
      {
        "title": "V . Dockercompose",
        "content": [
          {
            "title": "Premières notions d'orchestration de conteneurs"
          },
          {
            "title": "Ecriture d'une stack dockercompose"
          },
          {
            "title": "Mise en pratique"
          }
        ]
      },
      {
        "title": "VI . Optimisation du poste de développement grace à Docker",
        "content": [
          {
            "title": "Gestion des versions logicielles avec Docker"
          },
          {
            "title": "Installation d'outils bash avec Docker"
          },
          {
            "title": "Tests d'outil et POC avec Docker"
          },
          {
            "title": "Troubleshooting et exercice"
          }
        ]
      }
    ]
  },
  {
    "id": "git",
    "title": "Git",
    "picture": "",
    "description": "La gestion du code source et le versionnement de celle-ci est un indispensable du métier de développeur. C'est pourquoi nous proposons une formation sur Git, principal outil de versionning de code source. A l'issu de cette journée de formation, vous serez en mesure de partager et collaborer lors du développement de vos projets",
    "hashtag": [
      "Git",
      "Développement",
      "Gestionnaire de code source"
    ],
    "objectives": [
      "Découvrir  le fonctionnement de git",
      "Collaborer et développer du code avec une équipe",
      "Résoudre des conflits",
      "Découvrir les stratégies de 'branching'"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader"
    ],
    "prerequisite": [
      "Être à l'aise avec les langages de développement"
    ],
    "duration": "1 jour (7 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction à Git",
        "content": [
          {
            "title": "Les differents repositories"
          },
          {
            "title": "Installation de Git"
          },
          {
            "title": "Découverte de l'eco-système de git"
          }
        ]
      },
      {
        "title": "II . Versionner ses sources",
        "content": [
          {
            "title": "Le clonage de repository"
          },
          {
            "title": "Partager ses sources"
          },
          {
            "title": "Gestion des branches"
          },
          {
            "title": "Resolution des conflits"
          }
        ]
      },
      {
        "title": "III . Collaborer avec Git",
        "content": [
          {
            "title": "Github, Gitlab et les autres hébergeurs de repositories Git"
          },
          {
            "title": "Les forks"
          },
          {
            "title": "Les MR/PR"
          }
        ]
      },
      {
        "title": "IV . Stratégie Git: Gitflow",
        "content": [
          {
            "title": "Le concept de GitFlow"
          },
          {
            "title": "Les features, développement de fonctionnalités"
          },
          {
            "title": "Hotfix: intervenir en prod"
          },
          {
            "title": "Gestion des environnements"
          },
          {
            "title": "Les autres strategies Git"
          }
        ]
      },
      {
        "title": "V . Pour aller plus loin",
        "content": [
          {
            "title": "Outils de gestion de conflit"
          },
          {
            "title": "Les interfaces graphiques pour Git"
          },
          {
            "title": "Les fonctionnalités des hébergeurs de repositories (issues, wiki, ci/cd)"
          }
        ]
      }
    ]
  },
  {
    "id": "turbine",
    "title": "Turbine",
    "picture": "",
    "description": "Deploie tes applications dockerisées en 5 minutes grace à l'outils interne d'Adeo Turbine. Basé sur Kubernetes et Helm, vos applications seront deployées sur dans le cloud, sur l'environnement de votre choix.",
    "hashtag": [
      "Docker",
      "Kubernetes",
      "devops"
    ],
    "objectives": [
      "Découvrir  Kubernetes",
      "Deployer des applications avec Turbine",
      "Surveiller l'infrastructure déployée"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes",
      "Intégrateurs",
      "Ops"
    ],
    "prerequisite": [
      "Être à l'aise avec les langages de developpement",
      "Comprendre le fonctionnement des containeurs avec Docker",
      "Avoir des notions de base sur le cloud"
    ],
    "duration": "3 jours (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction à Kubernetes",
        "content": [
          {
            "title": "Quelques rappels sur Docker et son éco-systeme"
          },
          {
            "title": "Le vocabulaire de Kubernetes"
          },
          {
            "title": "Architecture et installation des outils"
          },
          {
            "title": "Notion sur le cloud et les première commandes Kube"
          }
        ]
      },
      {
        "title": "II . Découvrir  & explorer un cluster",
        "content": [
          {
            "title": "Inspection d'un cluster via les lignes de commandes"
          },
          {
            "title": "Explorer les différentes configuration existantes"
          },
          {
            "title": "Comprendre le fonctionnement du scaling et des namespaces"
          }
        ]
      },
      {
        "title": "III . Helm",
        "content": [
          {
            "title": "Découverte des helm chart"
          },
          {
            "title": "Mise en place d'un déploiement via Helm"
          },
          {
            "title": "Automatisation des déploiements"
          }
        ]
      },
      {
        "title": "VI . Deployer une application avec Turbine",
        "content": [
          {
            "title": "Créer une application sur Turbine"
          },
          {
            "title": "Mettre en place un environnement"
          },
          {
            "title": "Mise en pratique de la théorie avec un projet fil rouge"
          }
        ]
      },
      {
        "title": "V . Mise en réseau des services",
        "content": [
          {
            "title": "Faire communiquer les applications entre elle"
          },
          {
            "title": "Création d'une ingress"
          }
        ]
      },
      {
        "title": "VI . Administration des applications",
        "content": [
          {
            "title": "Gestion des authorisations avec les RBAC"
          },
          {
            "title": "Gestion des secrets"
          },
          {
            "title": "Comment débugger une application"
          },
          {
            "title": "Exploration des metrics d'un cluster"
          }
        ]
      }
    ]
  },
  {
    "id": "nodejs",
    "title": "NodeJS",
    "picture": "",
    "description": "Vous avez envie d'apprendre à concevoir des outils backend rapide à éxecuter et à développer ? Cette formation est faîtes pour vous. NodeJs dispose d'une communauté active, et permet d'acroitre la maintenabilité en utilsant le langage Javascript dans toute votre stack applicative.",
    "hashtag": [
      "javascript",
      "backend",
      "api"
    ],
    "objectives": [
      "Apprendre les bases de nodeJS",
      "Gerez la persistence des données",
      "Deployer une application nodejs",
      "Apprendre les bonnes pratiques de nodejs"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes"
    ],
    "prerequisite": [
      "Être à l'aise avec les langages de developpement",
      "Avoir déjà fait du javascript"
    ],
    "duration": "3 jours (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Premier pas avec nodeJS",
        "content": [
          {
            "title": "Les outils : node et npm"
          },
          {
            "title": "Ecriture et execution d'un permier script"
          },
          {
            "title": "Quelques rappel sur le langage javascript : callbacks, closures, scope, apply, bind, call"
          },
          {
            "title": "ECMAScript 6 : module, promise, class ..."
          }
        ]
      },
      {
        "title": "II . Un peu de théorie",
        "content": [
          {
            "title": "Le moteur Google V8"
          },
          {
            "title": "La boucle d'évenement"
          },
          {
            "title": "Les threads"
          }
        ]
      },
      {
        "title": "III . Comprendre comment utiliser nodejs",
        "content": [
          {
            "title": "La gestion des évenements"
          },
          {
            "title": "Le developpement asynchrone"
          },
          {
            "title": "Gérer les erreurs"
          },
          {
            "title": "Utilisation des streams : (http, fs, socket)"
          }
        ]
      },
      {
        "title": "IV . Apprendre à utiliser le framework Express",
        "content": [
          {
            "title": "Les concepts d'Express"
          },
          {
            "title": "Création d'un serveur d'API REST "
          },
          {
            "title": "Mise en pratique de la théorie avec un projet fil rouge"
          }
        ]
      },
      {
        "title": "V . Utilisation d'une base de donnée",
        "content": [
          {
            "title": "Mise en place d'une base de donnée Relationnel"
          },
          {
            "title": "Utilisation d'un ORM : Sequelize"
          }
        ]
      },
      {
        "title": "VI . Tester avec nodejs",
        "content": [
          {
            "title": "Un premier test avec Jest"
          },
          {
            "title": "Création de test unitaire (utilisation de mock)"
          },
          {
            "title": "Test d'integration"
          }
        ]
      },
      {
        "title": "VII . Aller plus loin",
        "content": [
          {
            "title": "Packager une application nodeJs"
          },
          {
            "title": "Dockeriser mon application"
          },
          {
            "title": "Creer une librairie nodeJS"
          }
        ]
      }
    ]
  },
  {
    "id": "java-springboot",
    "title": "Java Springboot",
    "picture": "",
    "description": "Vous voulez apprendre un framework java reconnu qui permet de faire des applications web robustes et évolutives : vous êtes au bon endroit. Ce framework existe depuis 2003, et a su évoluer pour devenir l'un des framework java les plus utilisé en entreprise aujourd'hui. ",
    "hashtag": [
      "java",
      "backend",
      "api"
    ],
    "objectives": [
      "Comprendre les principes de spring",
      "Savoir configurer les composants d'une application spring",
      "Sécuriser une application spring",
      "Gérer la persistance des données",
      "Déployer une application spring boot"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes"
    ],
    "prerequisite": [
      "Disposer de bonnes connaissances du langage Java"
    ],
    "duration": "3 jours (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction à Spring boot",
        "content": [
          {
            "title": "Historique du framework"
          },
          {
            "title": "Les grands principes de spring : IOC , AOP et une couche d’abstraction"
          },
          {
            "title": "Et spring boot dans tout ça ?"
          }
        ]
      },
      {
        "title": "II . Premiers pas avec spring boot",
        "content": [
          {
            "title": "Générer et exécuter notre pemière application springboot avec start.spring.io"
          },
          {
            "title": "Injection des dépendances"
          },
          {
            "title": "Strucutre de projet"
          }
        ]
      },
      {
        "title": "III . JPA & Spring data",
        "content": [
          {
            "title": "Présentation de JPA"
          },
          {
            "title": "Configuration de JPA avec hibernate"
          },
          {
            "title": "Apprendre à utiliser Srping Data"
          },
          {
            "title": "Comprendre les grands principes de JPA (transaction, lazy loading)"
          }
        ]
      },
      {
        "title": "IV . Spring MVC",
        "content": [
          {
            "title": "Exposer une api REST"
          },
          {
            "title": "Configuration de Spring MVC"
          },
          {
            "title": "Rappel de bonne pratique REST, et intégration de celle-ci dans Spring MVC "
          },
          {
            "title": "La gestion des exceptions"
          }
        ]
      },
      {
        "title": "V . Spring sécurity",
        "content": [
          {
            "title": "Authentification avec Spring (login/logout, OAuth2, JWT)"
          },
          {
            "title": "Gestion des filtres Web (Basic vs Digest, Remember Me, session)"
          },
          {
            "title": "Rôles et autorisations"
          },
          {
            "title": "Les filtres de protection (CSRF, CORS, XSS)"
          }
        ]
      },
      {
        "title": "VI . Les indicateurs de santé avec actualors",
        "content": [
          {
            "title": "Les principaux Endpoint"
          },
          {
            "title": "Customisation"
          }
        ]
      },
      {
        "title": "VII . Les Tests",
        "content": [
          {
            "title": "Test unitaire"
          },
          {
            "title": "Test d'integration"
          },
          {
            "title": "Test end to end"
          }
        ]
      }
    ]
  },
  {
    "id": "scrum",
    "title": "Scrum",
    "picture": "",
    "description": "Au travers de céreéoniaux agiles, venez vivre et découvrir Scrum. Entre connaissances théoriques, animation d'ateliers et conduite du changement, cette formation vous rendra autonome sur le poste de Scrum Master.",
    "hashtag": [
      "Agile",
      "Scrum",
      "Gestion de projet"
    ],
    "objectives": [
      "Revoir les bases de l'agilité",
      "Découvrir Scrum et son écosystème",
      "Savoir animer les rituels",
      "Pouvoir mettre en place Scrum au sein de son équipe",
      "Être capable de passer la certification"
    ],
    "trainee": [
      "Développeurs",
      "Fonctionnels",
      "Chefs de projet",
      "Manager"
    ],
    "prerequisite": [
      "Connaitre le monde du developpement informatique"
    ],
    "duration": "3 jours (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction de la formation",
        "content": [
          {
            "title": "Les objectifs"
          },
          {
            "title": "Plan de la formation"
          },
          {
            "title": "Apprendre à se connaitre"
          }
        ]
      },
      {
        "title": "II . L'agilité",
        "content": [
          {
            "title": "Pourquoi l'agilité facilite les projets informatiques"
          },
          {
            "title": "Découverte de l'état d'esprit Agile"
          },
          {
            "title": "S'approprier le manifeste Agile"
          },
          {
            "title": "Découverte des pratiques agiles"
          },
          {
            "title": "Mon premier atelier agile"
          }
        ]
      },
      {
        "title": "III . Les principes de scrum",
        "content": [
          {
            "title": "Le Scrum Guide et ses liens à l'agilité"
          },
          {
            "title": "Atelier sur nos croyances Scrum"
          },
          {
            "title": "Les piliers de Scrum"
          },
          {
            "title": "Les valeurs de Scrum"
          }
        ]
      },
      {
        "title": "VI . Les rôles dans une équipe Scrum",
        "content": [
          {
            "title": "La Scrum Team"
          },
          {
            "title": "Le product Owner"
          },
          {
            "title": "Le Scrum Master"
          },
          {
            "title": "La Dev Team"
          },
          {
            "title": "Les Stackholders"
          }
        ]
      },
      {
        "title": "V . Les artefacts",
        "content": [
          {
            "title": "Qu'est-ce que les artefacts?"
          },
          {
            "title": "Le product Backlog"
          },
          {
            "title": "Le sprint Backlog"
          },
          {
            "title": "L'increment"
          },
          {
            "title": "DOD et DOR"
          }
        ]
      },
      {
        "title": "VI . Les cérémonies Scrum",
        "content": [
          {
            "title": "Présentation des cérémonies"
          },
          {
            "title": "Le Sprint"
          },
          {
            "title": "Le Sprint Planning"
          },
          {
            "title": "Le Daily Meeting"
          },
          {
            "title": "La Sprint Review"
          },
          {
            "title": "La Sprint Rétrospective"
          }
        ]
      },
      {
        "title": "VII . Techniques d'animation",
        "content": [
          {
            "title": "Rendre les cérémonies attractives"
          },
          {
            "title": "Bien préparer un atelier: technique des 7P"
          },
          {
            "title": "Gestion des groupes et des conflits"
          },
          {
            "title": "Le plan d'une rétrospective"
          },
          {
            "title": "Retours d'expériences"
          },
          {
            "title": "Atelier de mise en pratique"
          }
        ]
      },
      {
        "title": "VIII . Conclusion",
        "content": [
          {
            "title": "Pour aller plus loin"
          },
          {
            "title": "Comment bien préparer la certification Scrum"
          },
          {
            "title": "Atelier d'amélioration continue."
          },
          {
            "title": "Questions / Réponses"
          }
        ]
      }
    ]
  },
  {
    "id": "angular",
    "title": "Angular",
    "picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/640px-Angular_full_color_logo.svg.png",
    "description": "Angular est un framework de conception d'applications et une plate-forme de développement permettant de créer des SPAs (single page applications) efficaces et sophistiquées.",
    "hashtag": [
      "angular",
      "front",
      "javascript"
    ],
    "objectives": [
      "Comprendre les fondamentaux d'Angular",
      "Création d'une application front-end en Angular",
      "Créer des formulaires",
      "Gérer la navigation",
      "Bonnes pratiques & tips"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes",
      "Intégrateurs"
    ],
    "prerequisite": [
      "Avoir des notions dans la programmation JavaScript",
      "Connaissances du langage HTML et CSS"
    ],
    "duration": "1,5 jour (10,5 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Les fondamentaux",
        "content": [
          {
            "title": "Qu'est qu'Angular"
          },
          {
            "title": "Outil mise à disposition"
          },
          {
            "title": "Création d'une application"
          }
        ]
      },
      {
        "title": "II . Les composants",
        "content": [
          {
            "title": "Qu'est-ce qu'un composant"
          },
          {
            "title": "cycle de vie d'un composant"
          },
          {
            "title": "Communication entre composants"
          },
          {
            "title": "Dump & Smart component"
          }
        ]
      },
      {
        "title": "III . Les modules",
        "content": [
          {
            "title": "Qu'est-ce qu'un module"
          },
          {
            "title": "Les différents types de module"
          },
          {
            "title": "Bonnes pratique"
          }
        ]
      },
      {
        "title": "IV . Et ensuite",
        "content": [
          {
            "title": "Les directives"
          },
          {
            "title": "Les pipes"
          },
          {
            "title": "Les services"
          }
        ]
      },
      {
        "title": "V . Les formulaires",
        "content": [
          {
            "title": "Template driven"
          },
          {
            "title": "Reactive form"
          },
          {
            "title": "Validation"
          }
        ]
      },
      {
        "title": "VI . La navigation",
        "content": [
          {
            "title": "Création de nos routes"
          },
          {
            "title": "Guardian"
          },
          {
            "title": "Lazy loading"
          }
        ]
      },
      {
        "title": "VII . Les tests",
        "content": [
          {
            "title": "Tests unitaires"
          }
        ]
      }
    ]
  },
  {
    "id": "java-springboot",
    "title": "Java Springboot",
    "picture": "",
    "description": "Vous voulez apprendre un framework java reconnu qui permet de faire des applications web robustes et évolutives : vous êtes au bon endroit. Ce framework existe depuis 2003, et a su évoluer pour devenir l'un des framework java les plus utilisé en entreprise aujourd'hui. ",
    "hashtag": [
      "java",
      "backend",
      "api"
    ],
    "objectives": [
      "Comprendre les principes de spring",
      "Savoir configurer les composants d'une application spring",
      "Sécuriser une application spring",
      "Gérer la persistance des données",
      "Déployer une application spring boot"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes"
    ],
    "prerequisite": [
      "Disposer de bonnes connaissances du langage Java"
    ],
    "duration": "3 jours (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction à Spring boot",
        "content": [
          {
            "title": "Historique du framework"
          },
          {
            "title": "Les grands principes de spring : IOC , AOP et une couche d’abstraction"
          },
          {
            "title": "Et spring boot dans tout ça ?"
          }
        ]
      },
      {
        "title": "II . Premiers pas avec spring boot",
        "content": [
          {
            "title": "Générer et exécuter notre pemière application springboot avec start.spring.io"
          },
          {
            "title": "Injection des dépendances"
          },
          {
            "title": "Strucutre de projet"
          }
        ]
      },
      {
        "title": "III . JPA & Spring data",
        "content": [
          {
            "title": "Présentation de JPA"
          },
          {
            "title": "Configuration de JPA avec hibernate"
          },
          {
            "title": "Apprendre à utiliser Srping Data"
          },
          {
            "title": "Comprendre les grands principes de JPA (transaction, lazy loading)"
          }
        ]
      },
      {
        "title": "IV . Spring MVC",
        "content": [
          {
            "title": "Exposer une api REST"
          },
          {
            "title": "Configuration de Spring MVC"
          },
          {
            "title": "Rappel de bonne pratique REST, et intégration de celle-ci dans Spring MVC "
          },
          {
            "title": "La gestion des exceptions"
          }
        ]
      },
      {
        "title": "V . Spring sécurity",
        "content": [
          {
            "title": "Authentification avec Spring (login/logout, OAuth2, JWT)"
          },
          {
            "title": "Gestion des filtres Web (Basic vs Digest, Remember Me, session)"
          },
          {
            "title": "Rôles et autorisations"
          },
          {
            "title": "Les filtres de protection (CSRF, CORS, XSS)"
          }
        ]
      },
      {
        "title": "VI . Les indicateurs de santé avec actualors",
        "content": [
          {
            "title": "Les principaux Endpoint"
          },
          {
            "title": "Customisation"
          }
        ]
      },
      {
        "title": "VII . Les Tests",
        "content": [
          {
            "title": "Test unitaire"
          },
          {
            "title": "Test d'integration"
          },
          {
            "title": "Test end to end"
          }
        ]
      }
    ]
  },
  {
    "id": "python",
    "title": "POO avec Python",
    "picture": "",
    "description": "Le langage de programmation python est devenu, notamment avec l'essor de la data et du serverless un langage incomtournable pour les developpeurs. A travers cette formation, nous découvrirons ce langage et les principes de la programmation objet.",
    "hashtag": [
      "Python",
      "POO",
      "COO",
      "Design Pattern",
      "Test Unitaire"
    ],
    "objectives": [
      "Découvrir l'écosysteme de Python",
      "Savoir produire du code objet propre et maintenable",
      "Tester du code",
      "Comprendre la Conception Orientée Objet"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes"
    ],
    "prerequisite": [
      "Connaître l'outils de versionning git",
      "Avoir quelques notions de programmation"
    ],
    "duration": "4 jours (28 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Les rudiments de python",
        "content": [
          {
            "title": "Mon premier script"
          },
          {
            "title": "Les variables"
          },
          {
            "title": "Le typage dans python"
          },
          {
            "title": "Les structures de données"
          },
          {
            "title": "Structurer du code"
          }
        ]
      },
      {
        "title": "II . Organisation du code source",
        "content": [
          {
            "title": "Les fonctions en python"
          },
          {
            "title": "Comment organiser le code source"
          },
          {
            "title": "Les librairies"
          },
          {
            "title": "PIP: Python Installs Packages "
          },
          {
            "title": "Ecrire une librairie"
          }
        ]
      },
      {
        "title": "III . POO: Programmation Orentiée Objet",
        "content": [
          {
            "title": "Comprendre la POO"
          },
          {
            "title": "SRP: Single responsibility principle"
          },
          {
            "title": "La notion de classe et d'objet"
          },
          {
            "title": "Comment utiliser les classes"
          },
          {
            "title": "Cas pratique"
          },
          {
            "title": "La notion d'héritage"
          },
          {
            "title": "Surcharger des classes"
          },
          {
            "title": "Le hiérachie des objets"
          },
          {
            "title": "Les collections"
          }
        ]
      },
      {
        "title": "IV . Les bonnes pratiques en Python",
        "content": [
          {
            "title": "Convention de code, les normes et les standards"
          },
          {
            "title": "PEP 8"
          },
          {
            "title": "Le clean code"
          },
          {
            "title": "La code review"
          },
          {
            "title": "Les linters"
          }
        ]
      },
      {
        "title": "V . COO: La Conception Orientée Objet",
        "content": [
          {
            "title": "Les principes SOLID"
          },
          {
            "title": "Les design patterns"
          },
          {
            "title": "Etude du singleton"
          },
          {
            "title": "Des exemples de design pattern"
          },
          {
            "title": "Le principe du KISS"
          }
        ]
      },
      {
        "title": "VI . Les tests en python",
        "content": [
          {
            "title": "Les logs"
          },
          {
            "title": "Definitions d'un test unitaire"
          },
          {
            "title": "Pytest: coder ses premiers tests"
          },
          {
            "title": "Les mocks"
          },
          {
            "title": "Le TDD: Test Driven Development"
          }
        ]
      }
    ]
  },
  {
    "id": "scrum",
    "title": "Scrum",
    "picture": "",
    "description": "Au travers de cérémoniaux agiles, venez vivre et découvrir Scrum. Entre connaissances théoriques, animation d'ateliers et conduite du changement, cette formation vous rendra autonome sur le poste de Scrum Master.",
    "hashtag": [
      "Agile",
      "Scrum",
      "Gestion de projet"
    ],
    "objectives": [
      "Revoir les bases de l'agilité",
      "Découvrir Scrum et son écosystème",
      "Savoir animer les rituels",
      "Pouvoir mettre en place Scrum au sein de son équipe",
      "Être capable de passer la certification"
    ],
    "trainee": [
      "Développeurs",
      "Fonctionnels",
      "Chefs de projet",
      "Manager"
    ],
    "prerequisite": [
      "Connaitre le monde du developpement informatique"
    ],
    "duration": "3 jours (21 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Introduction de la formation",
        "content": [
          {
            "title": "Les objectifs"
          },
          {
            "title": "Plan de la formation"
          },
          {
            "title": "Apprendre à se connaitre"
          }
        ]
      },
      {
        "title": "II . L'agilité",
        "content": [
          {
            "title": "Pourquoi l'agilité facilite les projets informatiques"
          },
          {
            "title": "Découverte de l'état d'esprit Agile"
          },
          {
            "title": "S'approprier le manifeste Agile"
          },
          {
            "title": "Découverte des pratiques agiles"
          },
          {
            "title": "Mon premier atelier agile"
          }
        ]
      }
      ,
      {
        "title": "III . Les principes de scum",
        "content": [
          {
            "title": "Le Scrum Guide et ses liens à l'agilité"
          },
          {
            "title": "Atelier sur nos croyances Scrum"
          },
          {
            "title": "Les piliers de Scrum"
          },
          {
            "title": "Les valeurs de Scrum"
          }
        ]
      },
      {
        "title": "VI . Les rôles dans une équipe Scrum",
        "content": [
          {
            "title": "La Scrum Team"
          },
          {
            "title": "Le product Owner"
          },
          {
            "title": "Le Scrum Master"
          },
          {
            "title": "La Dev Team"
          },
          {
            "title": "Les Stackholders"
          }
        ]
      }
      ,
      {
        "title": "V . Les artefacts",
        "content": [
          {
            "title": "Qu'est-ce que les artefacts?"
          },
          {
            "title": "Le product Backlog"
          },
          {
            "title": "Le sprint Backlog"
          },
          {
            "title": "L'increment"
          },
          {
            "title": "DOD et DOR"
          }
        ]
      }
      ,
      {
        "title": "VI . Les cérémonies Scrum",
        "content": [
          {
            "title": "Présentation des cérémonies"
          },
          {
            "title": "Le Sprint"
          },
          {
            "title": "Le Sprint Planning"
          },
          {
            "title": "Le Daily Meeting"
          },
          {
            "title": "La Sprint Review"
          },
          {
            "title": "La Sprint Rétrospective"
          }
        ]
      }
      ,
      {
        "title": "VII . Techniques d'animation",
        "content": [
          {
            "title": "Rendre les cérémonies attractives"
          },
          {
            "title": "Bien préparer un atelier: technique des 7P"
          },
          {
            "title": "Gestion des groupes et des conflits"
          },
          {
            "title": "Le plan d'une rétrospective"
          },
          {
            "title": "Retours d'expériences"
          },
          {
            "title": "Atelier de mise en pratique"
          }
        ]
      }
      ,
      {
        "title": "VIII . Conclusion",
        "content": [
          {
            "title": "Pour aller plus loin"
          },
          {
            "title": "Comment bien préparer la certification Scrum"
          },
          {
            "title": "Atelier d'amélioration continue."
          },
          {
            "title": "Questions / Réponses"
          }
        ]
      }
    ]
  },
  {
    "id": "terraform",
    "title": "Terraform",
    "picture": "",
    "description": "Infrastructure As Code est devenu un incontournable du provisionnement de cloud. Il permet en autre d'assurer l'intégrité et la maîtrise des services du cloud mais aussi d'avoir un management des accés au cloud. Dans cette formation nous partirons de l'interet de l'IaC au déploiement en production de service cloud au travers de cas pratiques.",
    "hashtag": [
      "Terraform",
      "Cloud",
      "Infrastructure",
      "DevOps",
      "GitOps"
    ],
    "objectives": [
      "Découvrir ce qu'est l'IaC",
      "Comprendre le fonctionnement de Terraform",
      "Savoir provisionner des services cloud",
      "Connaitre GitOps et ses principes"
    ],
    "trainee": [
      "Développeurs",
      "DevOps",
      "Architecte"
    ],
    "prerequisite": [
      "Avoir des connaissances sur le cloud en général",
      "Maîtriser Git"
    ],
    "duration": "2 jours (14 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Les concepts de l'infrastructure en tant que code (IaC)",
        "content": [
          {
            "title": "Définition de l'Iac"
          },
          {
            "title": "Comparaison entre le provisionnement standart et l'IaC"
          },
          {
            "title": "Les autres outils qui font de l'IaC"
          }
        ]
      },
      {
        "title": "II . Les grand principes de Terraform",
        "content": [
          {
            "title": "La notion de multicloud et la gestion des fournisseur"
          },
          {
            "title": "Gestion de l'état du cloud via Terraform"
          },
          {
            "title": "L'interfacage aves les APIs du cloud"
          },
          {
            "title": "La notion de plugins"
          }
        ]
      }
      ,
      {
        "title": "III . Les commandes de bases de Terraform",
        "content": [
          {
            "title": "Installation de Terraform"
          },
          {
            "title": "Creer un répertoire de travail avec init"
          },
          {
            "title": "Rédiger une première ressource sur AWS"
          },
          {
            "title": "Valider son premier script"
          },
          {
            "title": "Plannifier les ressources"
          },
          {
            "title": "Ajouter et supprimer des ressources"
          }
        ]
      },
      {
        "title": "VI . Organiser le projet avec les modules",
        "content": [
          {
            "title": "Mise en place d'un premier module"
          },
          {
            "title": "Les bonnes pratiques d'organisation"
          },
          {
            "title": "Ajuster la mise en forme avec fmt"
          },
          {
            "title": "La gestion des variables"
          },
          {
            "title": "Interagir avec les entrées et les sorties d'un module"
          },
          {
            "title": "La portée et la version des modules"
          }
        ]
      }
      ,
      {
        "title": "V . Collaborer avec Terraform",
        "content": [
          {
            "title": "La notion de d'etat avec terraform"
          },
          {
            "title": "Comment partager un état vs état local"
          },
          {
            "title": "Notion de back-end distant"
          },
          {
            "title": "Versionner son infrastructure sur Git"
          },
          {
            "title": "GitOps, en quoi Terraform est un acteur de ce mouvement"
          }
        ]
      }
      ,
      {
        "title": "VI . Pour aller plus loin",
        "content": [
          {
            "title": "Importer son cloud actuel"
          },
          {
            "title": "La gestion des secrets"
          },
          {
            "title": "La CI/CD de Terraform dans Gitlab"
          },
          {
            "title": "En quoi Terraform aide à la gestion de l'infrastructure et de ses acces"
          }
          ,
          {
            "title": "La certification associate: comment la préparer et l'obtenir"
          }
        ]
      }
      
    ]
  },
  {
    "id": "vuejs",
    "title": "VueJS",
    "picture": "https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/Vue.js_Logo_2.svg/1200px-Vue.js_Logo_2.svg.png",
    "description": "Cette formation à pour but de te faire découvrir Vue.js, le Framework open-source créé par Evan You. A la fin de cette formation, tu seras en capacité de créer des interfaces web dynamique mais aussi d'avoir de bonnes connaissances de l'écosystème vue.",
    "hashtag": [
      "vuejs",
      "front",
      "javascript"
    ],
    "objectives": [
      "Comprendre les fondamentaux de VueJS",
      "Création d'une application front-end en VueJS",
      "Comprendre Vuex",
      "Utilisation des mixins",
      "Bonnes pratiques & tips"
    ],
    "trainee": [
      "Développeurs",
      "TechLeader",
      "Architectes",
      "Intégrateurs"
    ],
    "prerequisite": [
      "Avoir des notions dans la programmation JavaScript",
      "Connaissances du langage HTML et CSS"
    ],
    "duration": "2 jour (14 heures)",
    "price": "Sur demande",
    "plan": [
      {
        "title": "I . Les fondamentaux",
        "content": [
          {
            "title": "Qu'est-ce que VueJs"
          },
          {
            "title": "Initialisation d'une application"
          }
        ]
      },
      {
        "title": "II . Les composants",
        "content": [
          {
            "title": "Qu'est-ce qu'un composant"
          },
          {
            "title": "cycle de vie d'un composant"
          },
          {
            "title": "La composition"
          },
          {
            "title": "Communication entre composants"
          },
          {
            "title": "La navigation entre les composants"
          },
          {
            "title": "Bonne pratique de création d'un composant"
          }
        ]
      },
      {
        "title": "III . Les formulaires",
        "content": [
          {
            "title": "Utilisation de formulaires"
          },
          {
            "title": "Exemple avec une librairy (Vuelidate)"
          }
        ]
      },
      {
        "title": "IV . Vuex",
        "content": [
          {
            "title": "Qu'est-ce que Vuex"
          },
          {
            "title": "Utilisation Vuex"
          },
          {
            "title": "Utilisation d'api"
          },
          {
            "title": "Rafraichissement des données"
          },
          {
            "title": "Side effect"
          }
        ]
      },      
      {
        "title": "V . Les tests",
        "content": [
          {
            "title": "Tests unitaires"
          },
          {
            "title": "Cypress"
          }
        ]
      }
    ]
  }
]